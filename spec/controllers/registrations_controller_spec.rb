require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe RegistrationsController do
  render_views

  before do
    @user = Factory(:user)
    sign_in @user

    @location = Factory(:location)
    @event = Factory(:event, :location_id => @location.id)
  end

  describe "new" do
    it "should render" do
      get :new, :event_id => @event.id
      response.should be_success
    end
  end

  describe "create" do
    it "should redirect to event page" do
      post :create, :event_id => @event.id, :registration => {}
      response.should redirect_to(event_path(@event))
    end

    it "should save a new registration for the current user" do
      post :create, :event_id => @event.id, :registration => {}
      Registration.last.user.should == @user
    end
    
    describe "with guests" do
      before do
        @event.update_attribute(:guests_per_user, 1)
      end
      
      it "should save a new registration for each guest" do
        post :create, :event_id => @event.id, :registration => {}, :guests => { :guest_name_0 => "Guesty", :guest_email_0 => "guesty@gmail.com" }
        
        guest_registration = Registration.where(:user_id => nil).first
        guest_registration.guest_name.should == "Guesty"
        guest_registration.guest_email.should == "guesty@gmail.com"
      end
    end

  end

  describe "destroy" do

    before do
      @registration = Factory(:registration, :event => @event, :user => @user)
    end

    it "should withdraw the registration if the registration belongs to current user" do
      delete :destroy, :event_id => @event.id, :id => @registration.id
      @registration.reload.should be_withdrawn
    end

    it "should not withdraw the registration if the registration does not belong to current user" do
      other_registration = Factory(:registration, :event => @event, :user_id => (@user.id + 1))

      delete :destroy, :event_id => @event.id, :id => other_registration.id
      other_registration.reload.should_not be_withdrawn
    end

    it "should redirect to the event page" do
      delete :destroy, :event_id => @event.id, :id => @registration.id
      response.should redirect_to(@event)
    end
  end

end
